# Generated by Django 5.2.5 on 2025-09-23 10:58

import django.db.models.deletion
import print.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfigurationImpression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format_type', models.CharField(choices=[('petit', 'Petit format'), ('grand', 'Grand format')], max_length=10)),
                ('small_format', models.CharField(blank=True, choices=[('A5', 'A5'), ('A4', 'A4'), ('A3', 'A3'), ('custom', 'Personnalisé')], max_length=10, null=True)),
                ('largeur', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('hauteur', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('paper_type', models.CharField(choices=[('glace', 'Papier glacé'), ('mat', 'Papier mat')], max_length=10)),
                ('finish', models.CharField(choices=[('brillant', 'Brillant'), ('mate', 'Mate'), ('standard', 'Standard')], max_length=10)),
                ('quantity', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Produits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=355)),
                ('categorie', models.CharField(max_length=155)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='Imageproduit/')),
                ('future', models.CharField(blank=True, max_length=155, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateurs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('num_tel', models.CharField(blank=True, max_length=10, null=True)),
                ('role', models.CharField(default='USER', max_length=20)),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('profils', models.ImageField(blank=True, null=True, upload_to='Profiluser/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('type_message', models.CharField(choices=[('utilisateur', 'Utilisateur'), ('assistant', 'Assistant')], max_length=50)),
                ('date_message', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_commande', models.DateTimeField(auto_now_add=True)),
                ('statut', models.CharField(max_length=100)),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('mode_paiement', models.CharField(max_length=155)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('configuration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='print.configurationimpression')),
            ],
        ),
        migrations.CreateModel(
            name='Fichier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_fichier', models.CharField(max_length=255)),
                ('fichier', models.FileField(default='', upload_to=print.models.fichier_upload_path)),
                ('format', models.CharField(max_length=50)),
                ('taille', models.DecimalField(decimal_places=2, max_digits=10)),
                ('resolution_dpi', models.IntegerField()),
                ('profil_couleur', models.CharField(max_length=50)),
                ('date_upload', models.DateTimeField(auto_now_add=True)),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fichiers', to='print.commande')),
            ],
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=15)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=15)),
                ('options', models.TextField(blank=True, null=True)),
                ('reference_trans', models.CharField(blank=True, max_length=100, null=True)),
                ('date_paiement', models.DateTimeField(auto_now_add=True)),
                ('statut_paiement', models.CharField(default='EN_ATTENTE', max_length=50)),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='print.commande')),
            ],
        ),
        migrations.CreateModel(
            name='Communiquer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='print.chat')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('utilisateur', 'message')},
            },
        ),
        migrations.CreateModel(
            name='Contenir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='print.commande')),
                ('fichier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='print.fichier')),
            ],
            options={
                'unique_together': {('commande', 'fichier')},
            },
        ),
    ]
